{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "",
        "description": "",
        "prerequisites": "",
    "postDeployment": [],
    "prerequisitesDeployTemplateFile": "",
    "lastUpdateTime": "",
"entities": [],
"tags": [],
"support": {
"tier": "community",
"armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
},
"author": {
"name": ""
}
},
"parameters": {
"PlaybookName": {
"defaultValue": "ConnectorHealthApp",
"type": "string"
}
},
"variables": {
"AzuremonitorlogsConnectionName": "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
"Office365ConnectionName": "[concat('Office365-', parameters('PlaybookName'))]",
"TeamsConnectionName": "[concat('Teams-', parameters('PlaybookName'))]"
},
"resources": [
{
"properties": {
    "provisioningState": "Succeeded",
    "state": "Enabled",
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "Recurrence": {
            "recurrence": {
                "frequency": "Hour",
                "interval": 24
            },
            "evaluatedRecurrence": {
                "frequency": "Hour",
                "interval": 24
            },
            "type": "Recurrence"
        }
    },
    "actions": {
        "Heartbeat_Query": {
            "runAfter": {
                "Ingestion_Anomaly_Query": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "body": "Heartbeat\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\n| where isnotempty(Computer)\n| where LastHeartbeat < ago(5h)",
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                    }
                },
                "method": "post",
                "path": "/visualizeQuery",
                "queries": {
                    "resourcegroups": "rg-5q-sentinel",
                    "resourcename": "5Q-LogAnalytics-Sentinel",
                    "resourcetype": "Log Analytics Workspace",
                    "subscriptions": "a1a21640-263b-45e1-9ad1-be5b4e1eb6ad",
                    "timerange": "Last 48 hours",
                    "visType": "Html Table"
                }
            }
        },
        "Ingestion_Anomaly_Query": {
        "runAfter": {},
        "type": "ApiConnection",
        "inputs": {
            "body": "let UpperThreshold = 3 ; \nlet LowerThreshold = -3 ; \nlet TableIgnoreList = dynamic(['SecurityAlert', 'BehaviorAnalytics', 'SecurityBaseline', 'ProtectionStatus']); // select tables you want to EXCLUDE from the results\nunion withsource=TableName1 *\n| make-series count() on TimeGenerated from ago(14d) to now() step 1d by TableName1\n| extend (anomalies, score, baseline) = series_decompose_anomalies(count_, 1.5, 7, 'linefit', 1, 'ctukey', 0.01)\n| where anomalies[-1] == 1 or anomalies[-1] == -1\n| extend Score = score[-1]\n| where Score >= UpperThreshold or Score <= LowerThreshold | where TableName1 !in (TableIgnoreList)\n| project TableName=TableName1, ExpectedCount=round(todouble(baseline[-1]),1), ActualCount=round(todouble(count_[-1]),1), AnomalyScore = round(todouble(score[-1]),1)",
            "host": {
                "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                }
            },
            "method": "post",
            "path": "/visualizeQuery",
            "queries": {
                "resourcegroups": "rg-5q-sentinel",
                "resourcename": "5Q-LogAnalytics-Sentinel",
                "resourcetype": "Log Analytics Workspace",
                "subscriptions": "a1a21640-263b-45e1-9ad1-be5b4e1eb6ad",
                "timerange": "Set in query",
                "visType": "Html Table"
            }
        }
    },
    "Post_a_message_as_the_Flow_bot_to_a_channel": {
        "runAfter": {
            "Send_an_email_to_the_SOC_Team": [
                "Succeeded"
            ]
        },
        "type": "ApiConnection",
        "inputs": {
            "body": {
                "messageBody": "Tables with Data Ingestion Anomalies\n@{base64ToString(body('Ingestion_Anomaly_Query')?['body'])}\n\nVirtual Machines without Heartbeat\n@{base64ToString(body('Heartbeat_Query')?['body'])}\n",
                "recipient": {
                    "channelId": "19:e965270be0b74d78bbcd249f0c798346@thread.tacv2"
                }
            },
            "host": {
                "connection": {
                    "name": "@parameters('$connections')['teams_1']['connectionId']"
                }
            },
            "method": "post",
            "path": "/flowbot/actions/notification/recipienttypes/channel",
            "queries": {
                "groupId": "31b9af4e-30d6-4bce-826d-7723dffda48e"
            }
        }
    },
    "Send_an_email_to_the_SOC_Team": {
        "runAfter": {
            "Heartbeat_Query": [
                "Succeeded"
            ]
        },
        "type": "ApiConnection",
        "inputs": {
            "body": {
                "Body": "<p><span style=\"font-size: 14px\"><strong>Tables with Data Ingestion Anomalies<br>\n</strong></span><br>\n@{base64ToString(body('Ingestion_Anomaly_Query')?['body'])}<br>\n<br>\n<br>\n<br>\n<br>\n<span style=\"color: rgb(147,101,184)\"><strong>Virtual Machines without Heartbeat<br>\n</strong></span><span style=\"color: rgb(26,188,156)\"><strong><br>\n</strong></span><span style=\"color: rgb(26,188,156)\"><strong>@{base64ToString(body('Heartbeat_Query')?['body'])}</strong></span><span style=\"color: rgb(26,188,156)\"><strong></strong></span><br>\n</p>",
                "Importance": "High",
                "Subject": "Data Ingestion & Heartbeat Anomaly Incident Summary @{utcNow()}",
                "To": "SOC@oud.com; jake.derkowski@oud.com"
            },
            "host": {
                "connection": {
                    "name": "@parameters('$connections')['office365_1']['connectionId']"
                }
            },
            "method": "post",
            "path": "/v2/Mail"
        }
    }
},
"outputs": {}
},
"parameters": {
"$connections": {
"value": {
    "azuremonitorlogs": {
        "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
        "connectionName": "[variables('AzuremonitorlogsConnectionName')]",
        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
    },
    "office365_1": {
        "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
        "connectionName": "[variables('Office365ConnectionName')]",
        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
    },
    "teams_1": {
        "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
        "connectionName": "[variables('TeamsConnectionName')]",
        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
    }
}
}
}
},
"name": "[parameters('PlaybookName')]",
"type": "Microsoft.Logic/workflows",
"location": "[resourceGroup().location]",
"tags": {
"LogicAppsCategory": "security",
"Status": "Good",
"AutomationRule": "Notify-ResourceHealth",
"hidden-SentinelTemplateName": "ConnectorHealthApp",
"hidden-SentinelTemplateVersion": "1.0"
},
"identity": {
"type": "SystemAssigned"
},
"apiVersion": "2017-07-01",
"dependsOn": [
"[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
"[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
"[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
]
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('AzuremonitorlogsConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('AzuremonitorlogsConnectionName')]",
"customParameterValues": {},
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
}
}
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('Office365ConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('Office365ConnectionName')]",
"customParameterValues": {},
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
}
}
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('TeamsConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('TeamsConnectionName')]",
"customParameterValues": {},
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
}
}
}
]
}
